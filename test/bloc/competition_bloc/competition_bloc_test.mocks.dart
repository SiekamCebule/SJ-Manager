// Mocks generated by Mockito 5.4.4 from annotations
// in sj_manager/test/bloc/competition_bloc/competition_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:osje_sim/osje_sim.dart' as _i8;
import 'package:sj_manager/models/simulation_db/competition/competition.dart'
    as _i6;
import 'package:sj_manager/models/simulation_db/competition/rules/utils/judges_creator/concrete/default.dart'
    as _i9;
import 'package:sj_manager/models/simulation_db/competition/rules/utils/judges_creator/judges_creator.dart'
    as _i2;
import 'package:sj_manager/models/simulation_db/event_series/event_series.dart'
    as _i3;
import 'package:sj_manager/models/simulation_db/standings/score/details/score_details.dart'
    as _i5;
import 'package:sj_manager/models/simulation_db/standings/standings.dart'
    as _i4;
import 'package:sj_manager/models/user_db/hill/hill.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeJudgesCreatingContext_0 extends _i1.SmartFake
    implements _i2.JudgesCreatingContext {
  _FakeJudgesCreatingContext_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventSeries_1 extends _i1.SmartFake implements _i3.EventSeries {
  _FakeEventSeries_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompetition_2<E, S extends _i4.Standings<dynamic, _i5.ScoreDetails>>
    extends _i1.SmartFake implements _i6.Competition<E, S> {
  _FakeCompetition_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHill_3 extends _i1.SmartFake implements _i7.Hill {
  _FakeHill_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindMeasurement_4 extends _i1.SmartFake
    implements _i8.WindMeasurement {
  _FakeWindMeasurement_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJumpSimulationRecord_5 extends _i1.SmartFake
    implements _i8.JumpSimulationRecord {
  _FakeJumpSimulationRecord_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DefaultJudgesCreator].
///
/// See the documentation for Mockito's code generation for more information.
class MockDefaultJudgesCreator extends _i1.Mock
    implements _i9.DefaultJudgesCreator {
  MockDefaultJudgesCreator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.JudgesCreatingContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeJudgesCreatingContext_0(
          this,
          Invocation.getter(#context),
        ),
      ) as _i2.JudgesCreatingContext);

  @override
  set context(_i2.JudgesCreatingContext? _context) => super.noSuchMethod(
        Invocation.setter(
          #context,
          _context,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);

  @override
  List<double> compute(_i2.JudgesCreatingContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #compute,
          [context],
        ),
        returnValue: <double>[],
      ) as List<double>);

  @override
  void setUpContext(_i2.JudgesCreatingContext? context) => super.noSuchMethod(
        Invocation.method(
          #setUpContext,
          [context],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [JudgesCreatingContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockJudgesCreatingContext extends _i1.Mock
    implements _i2.JudgesCreatingContext {
  MockJudgesCreatingContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.EventSeries get eventSeries => (super.noSuchMethod(
        Invocation.getter(#eventSeries),
        returnValue: _FakeEventSeries_1(
          this,
          Invocation.getter(#eventSeries),
        ),
      ) as _i3.EventSeries);

  @override
  _i6.Competition<dynamic, _i4.Standings<dynamic, _i5.ScoreDetails>>
      get competition => (super.noSuchMethod(
            Invocation.getter(#competition),
            returnValue: _FakeCompetition_2<dynamic,
                _i4.Standings<dynamic, _i5.ScoreDetails>>(
              this,
              Invocation.getter(#competition),
            ),
          ) as _i6
              .Competition<dynamic, _i4.Standings<dynamic, _i5.ScoreDetails>>);

  @override
  int get currentRound => (super.noSuchMethod(
        Invocation.getter(#currentRound),
        returnValue: 0,
      ) as int);

  @override
  _i7.Hill get hill => (super.noSuchMethod(
        Invocation.getter(#hill),
        returnValue: _FakeHill_3(
          this,
          Invocation.getter(#hill),
        ),
      ) as _i7.Hill);

  @override
  _i8.WindMeasurement get windMeasurement => (super.noSuchMethod(
        Invocation.getter(#windMeasurement),
        returnValue: _FakeWindMeasurement_4(
          this,
          Invocation.getter(#windMeasurement),
        ),
      ) as _i8.WindMeasurement);

  @override
  _i8.JumpSimulationRecord get jumpSimulationRecord => (super.noSuchMethod(
        Invocation.getter(#jumpSimulationRecord),
        returnValue: _FakeJumpSimulationRecord_5(
          this,
          Invocation.getter(#jumpSimulationRecord),
        ),
      ) as _i8.JumpSimulationRecord);

  @override
  int get judgesCount => (super.noSuchMethod(
        Invocation.getter(#judgesCount),
        returnValue: 0,
      ) as int);
}

// Mocks generated by Mockito 5.4.4 from annotations
// in sj_manager/test/ui/database_editor/database_editor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:sj_manager/features/app_settings/data/data_sources/shared_prefs_app_settings_data_source.dart'
    as _i2;
import 'package:sj_manager/features/app_settings/data/repository/local_app_settings_repository.dart'
    as _i3;
import 'package:sj_manager/to_embrace/ui/theme/app_schemes.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPrefsAppSettingsDataSource_0 extends _i1.SmartFake
    implements _i2.SharedPrefsAppSettingsDataSource {
  _FakeSharedPrefsAppSettingsDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalAppSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAppSettingsRepository extends _i1.Mock
    implements _i3.LocalAppSettingsRepository {
  MockLocalAppSettingsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPrefsAppSettingsDataSource get settingsDataSource =>
      (super.noSuchMethod(
        Invocation.getter(#settingsDataSource),
        returnValue: _FakeSharedPrefsAppSettingsDataSource_0(
          this,
          Invocation.getter(#settingsDataSource),
        ),
      ) as _i2.SharedPrefsAppSettingsDataSource);

  @override
  _i4.Future<_i5.AppColorScheme> get colorScheme => (super.noSuchMethod(
        Invocation.getter(#colorScheme),
        returnValue:
            _i4.Future<_i5.AppColorScheme>.value(_i5.AppColorScheme.blue),
      ) as _i4.Future<_i5.AppColorScheme>);

  @override
  _i4.Future<String> get languageCode => (super.noSuchMethod(
        Invocation.getter(#languageCode),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.getter(#languageCode),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> setColorScheme(_i5.AppColorScheme? colorScheme) =>
      (super.noSuchMethod(
        Invocation.method(
          #setColorScheme,
          [colorScheme],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setLanguageCode(String? languageCode) => (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

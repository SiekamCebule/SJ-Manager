// Mocks generated by Mockito 5.4.4 from annotations
// in sj_manager/test/ui/database_editor/database_editor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i2;
import 'package:shared_preferences/shared_preferences.dart' as _i3;
import 'package:sj_manager/repositories/generic/items_repo.dart' as _i4;
import 'package:sj_manager/repositories/settings/local_user_settings_repo.dart'
    as _i5;
import 'package:sj_manager/ui/theme/app_schemes.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueStream_0<T1> extends _i1.SmartFake
    implements _i2.ValueStream<T1> {
  _FakeValueStream_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeType_1 extends _i1.SmartFake implements Type {
  _FakeType_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_2 extends _i1.SmartFake
    implements _i3.SharedPreferences {
  _FakeSharedPreferences_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ItemsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemsRepo<T> extends _i1.Mock implements _i4.ItemsRepo<T> {
  MockItemsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueStream<Iterable<T>> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: _FakeValueStream_0<Iterable<T>>(
          this,
          Invocation.getter(#items),
        ),
      ) as _i2.ValueStream<Iterable<T>>);

  @override
  Type get itemsType => (super.noSuchMethod(
        Invocation.getter(#itemsType),
        returnValue: _FakeType_1(
          this,
          Invocation.getter(#itemsType),
        ),
      ) as Type);

  @override
  Iterable<T> get last => (super.noSuchMethod(
        Invocation.getter(#last),
        returnValue: <T>[],
      ) as Iterable<T>);

  @override
  int get lastLength => (super.noSuchMethod(
        Invocation.getter(#lastLength),
        returnValue: 0,
      ) as int);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);

  @override
  void set(Iterable<T>? value) => super.noSuchMethod(
        Invocation.method(
          #set,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocalUserSettingsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalUserSettingsRepo extends _i1.Mock
    implements _i5.LocalUserSettingsRepo {
  MockLocalUserSettingsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SharedPreferences get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue: _FakeSharedPreferences_2(
          this,
          Invocation.getter(#prefs),
        ),
      ) as _i3.SharedPreferences);

  @override
  _i2.ValueStream<void> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _FakeValueStream_0<void>(
          this,
          Invocation.getter(#stream),
        ),
      ) as _i2.ValueStream<void>);

  @override
  void setAppColorScheme(_i6.AppColorScheme? scheme) => super.noSuchMethod(
        Invocation.method(
          #setAppColorScheme,
          [scheme],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAppThemeBrightness(_i7.Brightness? brightness) => super.noSuchMethod(
        Invocation.method(
          #setAppThemeBrightness,
          [brightness],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDatabaseEditorTutorialShown(bool? shown) => super.noSuchMethod(
        Invocation.method(
          #setDatabaseEditorTutorialShown,
          [shown],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLanguageCode(String? code) => super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [code],
        ),
        returnValueForMissingStub: null,
      );
}

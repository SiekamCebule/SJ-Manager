// Mocks generated by Mockito 5.4.4 from annotations
// in sj_manager/test/ui/database_editor/database_editor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i2;
import 'package:sj_manager/models/db/team/team.dart' as _i4;
import 'package:sj_manager/repositories/countries/country_facts/teams_repo.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueStream_0<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TeamsRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockTeamsRepo extends _i1.Mock implements _i3.TeamsRepo {
  MockTeamsRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueStream<List<_i4.Team>> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: _FakeValueStream_0<List<_i4.Team>>(
          this,
          Invocation.getter(#items),
        ),
      ) as _i2.ValueStream<List<_i4.Team>>);

  @override
  List<_i4.Team> get lastItems => (super.noSuchMethod(
        Invocation.getter(#lastItems),
        returnValue: <_i4.Team>[],
      ) as List<_i4.Team>);

  @override
  int get lastLength => (super.noSuchMethod(
        Invocation.getter(#lastLength),
        returnValue: 0,
      ) as int);

  @override
  void set(List<_i4.Team>? value) => super.noSuchMethod(
        Invocation.method(
          #set,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
